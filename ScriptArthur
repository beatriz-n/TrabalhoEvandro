------------------2------------------
CREATE OR REPLACE FUNCTION criar_cirurgia(codigo_cirurgia numeric, codigo_paciente numeric, data_cirurgia date, descricao_cirurgia varchar)
	RETURNS VOID AS
	$$
	DECLARE
		paciente_id INTEGER;
		cirurgia_id INTEGER;
	BEGIN
		SELECT id_paciente INTO paciente_id FROM paciente
		WHERE codigo = codigo_paciente;

		SELECT id_cirurgia INTO cirurgia_id FROM cirurgia
		WHERE id_paciente = paciente_id AND 
		data_consulta = data_cirurgia AND 
		descricao = descricao_cirurgia;

		IF paciente_id IS NULL THEN
			RAISE EXCEPTION 'Paciente com o código % não foi encontrado!', codigo_paciente;
		END IF;
	
		IF cirurgia_id IS NOT NULL THEN
			RAISE EXCEPTION 'Cirurgia já marcada para essa data!';
		END IF;

		IF data_cirurgia > CURRENT_DATE THEN
			RAISE EXCEPTION 'A data da cirurgia não pode ser posterior à data atual!';
		END IF;

		INSERT INTO cirurgia (id_cirurgia, codigo, data_consulta, descricao, id_paciente)
		VALUES (nextval('sid_cirurgia'), codigo_cirurgia, data_cirurgia, descricao_cirurgia, paciente_id);
	END;
	$$
	LANGUAGE PLPGSQL;

select criar_cirurgia(100, 123456, '2024-04-06', 'Cirurgia da Coluna');

------------------5------------------
Alternativa D

------------------6------------------
Alternativa E

------------------7------------------
Alternativa E